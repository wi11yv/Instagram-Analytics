const OPENAI_API_KEY = "your-api-key-here"; // Replace with your real key

function generateSocialMediaPosts() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  const data = sheet.getDataRange().getValues();

  const headers = data[0];
  const descriptionColIndex = headers.indexOf("Description"); // assuming D column
  const postColIndex = headers.indexOf("Post");

  if (descriptionColIndex === -1 || postColIndex === -1) {
    throw new Error('Missing "Description" or "Post" column');
  }

  for (let i = 1; i < data.length; i++) {
    const row = data[i];
    const description = row[descriptionColIndex];

    // Skip if there's no description or post already exists
    if (!description || row[postColIndex]) continue;

    const prompt = `
You are a witty and versatile social media marketer. Write a unique, engaging, and promotional social media post based solely on the following product description:

"${description}"

Vary the tone and structure from post to post. Make it appealing, friendly, and scroll-stopping. The post should clearly promote the product and encourage viewers to visit the shop or product link to order. Feel free to use a call to action like "Shop now", "Grab yours here", or "Don't miss out".

Do not mention 'product description' or explain what you're doing â€” just write the actual post.
`;

    const post = callChatGPT(prompt);
    if (post) {
      sheet.getRange(i + 1, postColIndex + 1).setValue(post);
    }
  }
}

function callChatGPT(prompt) {
  const url = "https://api.openai.com/v1/chat/completions";

  const payload = {
    model: "gpt-3.5-turbo",
    messages: [
      { role: "system", content: "You are a creative and persuasive social media copywriter." },
      { role: "user", content: prompt },
    ],
    max_tokens: 150,
    temperature: 0.9,
  };

  const options = {
    method: "POST",
    headers: {
      Authorization: `Bearer ${OPENAI_API_KEY}`,
      "Content-Type": "application/json",
    },
    payload: JSON.stringify(payload),
    muteHttpExceptions: true,
  };

  try {
    const response = UrlFetchApp.fetch(url, options);
    const result = JSON.parse(response.getContentText());

    return result.choices?.[0]?.message?.content.trim() || "";
  } catch (e) {
    Logger.log("Error fetching from OpenAI: " + e);
    return "";
  }
}
